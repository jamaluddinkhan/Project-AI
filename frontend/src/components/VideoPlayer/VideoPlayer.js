import React, { useState, useRef } from 'react';
import './VideoPlayer.css';

const VideoPlayer = ({ videoUrl, videoInfo }) => {
  const [isLoading, setIsLoading] = useState(false);
  const videoRef = useRef(null);

  const handleDownload = () => {
    if (videoUrl) {
      const a = document.createElement('a');
      a.href = videoUrl;
      a.download = `ai-video-${new Date().getTime()}.mp4`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
    }
  };

  const handleShare = async () => {
    if (navigator.share && videoUrl) {
      try {
        await navigator.share({
          title: 'AI Generated Video',
          text: 'Check out this video generated by AI!',
          url: videoUrl,
        });
      } catch (error) {
        console.log('Sharing failed:', error);
      }
    } else {
      // Fallback: copy to clipboard
      navigator.clipboard.writeText(videoUrl).then(() => {
        alert('Video link copied to clipboard!');
      });
    }
  };

  const handleVideoLoadStart = () => {
    setIsLoading(true);
  };

  const handleVideoLoaded = () => {
    setIsLoading(false);
  };

  if (!videoUrl) {
    return (
      <div className="video-placeholder">
        <div className="placeholder-icon">ðŸŽ¬</div>
        <p>
          <span className="placeholder-icon">ðŸ“¹</span>
          Your generated video will appear here
        </p>
        <small>Enter text and click "Generate Video" to create amazing content</small>
      </div>
    );
  }

  return (
    <div className="video-player-container">
      <div style={{ position: 'relative' }}>
        <video
          ref={videoRef}
          controls
          className="video-player"
          onLoadStart={handleVideoLoadStart}
          onLoadedData={handleVideoLoaded}
          onCanPlay={handleVideoLoaded}
        >
          <source src={videoUrl} type="video/mp4" />
          Your browser does not support the video tag.
        </video>
        
        {isLoading && (
          <div className="video-loading">
            <div className="video-loading-spinner"></div>
            <span>Loading video...</span>
          </div>
        )}
      </div>
      
      {videoInfo && (
        <div className="video-info">
          <p>Generated {new Date(videoInfo.timestamp).toLocaleTimeString()}</p>
        </div>
      )}
      
      <div className="video-controls">
        <button onClick={handleDownload} className="download-btn">
          Download Video
        </button>
        
        {navigator.share && (
          <button onClick={handleShare} className="control-btn share-btn">
            Share
          </button>
        )}
      </div>
    </div>
  );
};

export default VideoPlayer;